version: "3.9"
services:
  api-redis:
    image: "redis:6-alpine"
    command: "redis-server --save 60 1 --loglevel warning --requirepass ${EVRANE_BLOG_API_REDIS_PASSWORD}"
    ports:
      - "8020:6379"
    volumes:
      - "api-redis-volume:/data"
  api-server:
    build:
      context: "../../.."
      dockerfile: "./Blog.Api/Dockerfile"
    environment:
      "ASPNETCORE_URLS": "http://+:8000"
      "AwsSettings__AccessKeyId": "${AWS_ACCESS_KEY_ID}"
      "AwsSettings__SecretAccessKey": "${AWS_SECRET_ACCESS_KEY}"
      "AwsSettings__Region": "${AWS_REGION}"
      "AwsSettings__S3Settings__BucketName": "${AWS_S3_BUCKET_NAME}"
      "AwsSettings__AwsSolutionSettings__ServerlessImageHandlerSolutionConfiguration__SecretsManagerName": "${AWS_SOLUTION_SERVERLESS_IMAGE_HANDLER_SECRETS_MANAGER_NAME}"
      "AwsSettings__AwsSolutionSettings__ServerlessImageHandlerSolutionConfiguration__SecretKey": "${AWS_SOLUTION_SERVERLESS_IMAGE_HANDLER_SECRET_KEY}"
      "AwsSettings__AwsSolutionSettings__ServerlessImageHandlerSolutionConfiguration__DistributionDomainName": "${AWS_SOLUTION_SERVERLESS_IMAGE_HANDLER_DISTRIBUTION_DOMAIN_NAME}"
      "ConnectionSettings__Postgres__Address": "${EVRANE_BLOG_API_POSTGRES_ADDR}"
      "ConnectionSettings__Postgres__Port": "${EVRANE_BLOG_API_POSTGRES_PORT}"
      "ConnectionSettings__Postgres__Username": "${EVRANE_BLOG_API_POSTGRES_USER}"
      "ConnectionSettings__Postgres__Password": "${EVRANE_BLOG_API_POSTGRES_PASSWORD}"
      "ConnectionSettings__Postgres__Database": "${EVRANE_BLOG_API_POSTGRES_DB}"
      "AuthSettings__Authority": "${OIDC_AUTHORITY}"
      "AuthSettings__Audience": "${OIDC_AUDIENCE}"
    depends_on: 
      - api-redis
    ports:
      - "8029:8000"
  admin-server:
    build:
      context: "../../.."
      dockerfile: "./Blog.Admin/Dockerfile"
    environment:
      "ASPNETCORE_URLS": "http://+:8000"
      "ServiceSettings__Blog": "http://api-server:8000"
      "AuthSettings__Authority": "${OIDC_AUTHORITY}"
      "AuthSettings__ClientId": "${ADMIN_OIDC_CLIENT_ID}"
      "AuthSettings__ClientSecret": "${ADMIN_OIDC_CLIENT_SECRET}"
      "ASPNETCORE_ENVIRONMENT": "Development"
    ports:
      - "8022:8000"
  web-1-server:
    build:
      context: "../../.."
      dockerfile: "./Blog.Web/Dockerfile"
    environment:
      "ASPNETCORE_URLS": "http://+:8000"
      "ServiceSettings__Blog": "http://api-server:8000"
      "Domain": "${WEB_1_DOMAIN}"
      "ASPNETCORE_ENVIRONMENT": "Development"
    ports:
      - "8023:8000"
  web-2-server:
    build:
      context: "../../.."
      dockerfile: "./Blog.Web/Dockerfile"
    environment:
      "ASPNETCORE_URLS": "http://+:8000"
      "ServiceSettings__Blog": "http://api-server:8000"
      "Domain": "${WEB_2_DOMAIN}"
      "ASPNETCORE_ENVIRONMENT": "Development"
    ports:
      - "8024:8000"
  nginx:
    image: nginx:1.23
    ports:
      - "8100:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/cert
    depends_on:
      - api-server
      - admin-server
      - web-1-server
      - web-2-server
volumes:
  api-redis-volume: