@model UserAccountDropDownViewModel

<div
    x-data="{
         userAccountDropdownOpen: false,
         toggleUserAccountDropdown() {
             this.userAccountDropdownOpen = !this.userAccountDropdownOpen
         },
        dropDownItemIdPrefix: 'user-account-dropdown-2-item-id',
        activeIndex: null,
        activeItem: null,
        onEscClick() {
          this.close()
        },
        onMouseMove(event, index) {
          if (this.activeIndex === index) return;
          this.activeIndex = index;
          this.activeItem = event.target;
        },
        onMouseLeave(event) {
          if (event.toElement.id.includes(this.menuItemIdPrefix)) return;
          this.activeIndex = null;
          this.activeItem = null;
        },
        close() {
          this.userAccountDropdownOpen = false;
        },
    }"
    x-on:keydown.escape.prevent.stop="close()"
    x-on:click.outside="close()"
    class="relative ml-3">
    <div>
        <button
            x-on:click="toggleUserAccountDropdown()"
            type="button" class="flex max-w-xs items-center rounded-full bg-white text-sm focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2" id="user-menu-button" aria-expanded="false" aria-haspopup="true">
            <span class="sr-only">Open user menu</span>
            <img class="h-8 w-8 rounded-full" src="https://images.unsplash.com/photo-1502685104226-ee32379fefbe?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80" alt="">
        </button>
    </div>

    <!--
    Dropdown menu, show/hide based on menu state.

    Entering: "transition ease-out duration-100"
    From: "transform opacity-0 scale-95"
    To: "transform opacity-100 scale-100"
    Leaving: "transition ease-in duration-75"
    From: "transform opacity-100 scale-100"
    To: "transform opacity-0 scale-95"
    -->
    <div
        x-show="userAccountDropdownOpen"
        style="display: none;"
        x-transition:enter="transition ease-out duration-100"
        x-transition:enter-start="transform opacity-0 scale-95"
        x-transition:enter-end="transform opacity-100 scale-100"
        x-transition:leave="transition ease-in duration-75"
        x-transition:leave-start="transform opacity-100 scale-100"
        x-transition:leave-end="transform opacity-0 scale-95"
        class="absolute right-0 z-10 mt-2 w-48 origin-top-right divide-y divide-gray-200 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="user-menu-button" tabindex="-1">
        <div class="py-1" role="none">
            @for (var i = 0; i < Model.UserNavigation.Count; i++)
            {
                var nav = Model.UserNavigation[i];
                <a href="@nav.Href" x-on:mouseleave="onMouseLeave($event)" x-on:mousemove="onMouseMove($event, @i)" x-bind:class=" activeIndex === @i ? 'bg-gray-100 text-gray-900': 'text-gray-700'" class="block px-4 py-2 text-sm" role="menuitem" tabindex="-1" id="user-account-dropdown-2-item-id-@i">@nav.Name</a>
            }
        </div>
    </div>
</div>