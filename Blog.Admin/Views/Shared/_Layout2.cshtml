@using Blog.Admin.ViewComponents
@{
    var levels = ViewData["Levels"] != null ? (BreadcrumbsDto)ViewData["Levels"]! : new BreadcrumbsDto(Links: new List<NavigationDto>());
}

<!DOCTYPE html>
<html lang="en" class="h-full bg-white">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="~/css/tailwindcss.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
</head>
@* When the mobile menu is open, add `overflow-hidden` to the `body` element to prevent double scrollbars *@
<body class="h-full" x-data="{mobileMenuOpen: false}" x-bind:class="mobileMenuOpen ? 'overflow-hidden' : ''">

@* Open: "fixed inset-0 z-40 overflow-y-auto", Closed: "" *@
<header x-bind:class="mobileMenuOpen ? 'fixed inset-0 z-40 overflow-y-auto' : ''" class="bg-white shadow-sm lg:static lg:overflow-y-visible">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
        <div class="relative flex justify-between lg:gap-8 xl:grid xl:grid-cols-12">
            @* 图标 *@
            <div class="flex md:absolute md:inset-y-0 md:left-0 lg:static xl:col-span-2">
                <div class="flex flex-shrink-0 items-center">
                    <a href="#">
                        <img class="block h-8 w-auto" src="https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600" alt="Your Company">
                    </a>
                </div>
            </div>
            @* 搜索栏 *@
            <div class="min-w-0 flex-1 md:px-8 lg:px-0 xl:col-span-6">
                <div class="flex items-center px-6 py-4 md:mx-auto md:max-w-3xl lg:mx-0 lg:max-w-none xl:px-0">
                    <div class="w-full">
                        <label for="search" class="sr-only">Search</label>
                        <div class="relative">
                            <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                <svg class="h-5 w-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z" clip-rule="evenodd"/>
                                </svg>
                            </div>
                            <input id="search" name="search" class="block w-full rounded-md border border-gray-300 bg-white py-2 pl-10 pr-3 text-sm placeholder-gray-500 focus:border-indigo-500 focus:text-gray-900 focus:placeholder-gray-400 focus:outline-none focus:ring-1 focus:ring-indigo-500 sm:text-sm" placeholder="Search" type="search">
                        </div>
                    </div>
                </div>
            </div>
            @* 手机的面包按钮 *@
            <div class="flex items-center md:absolute md:inset-y-0 md:right-0 lg:hidden">
                @* Mobile menu button *@
                <button x-on:click="mobileMenuOpen = !mobileMenuOpen" type="button" class="-mx-2 inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500" x-bind:aria-expanded="mobileMenuOpen">
                    <span class="sr-only">Open menu</span>
                    @*
                    Icon when menu is closed.

                    Menu open: "hidden", Menu closed: "block"
                    *@
                    <svg x-bind:class="mobileMenuOpen ? 'hidden' : 'block'" class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" x-bind:aria-hidden="mobileMenuOpen">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"/>
                    </svg>
                    @*
                    Icon when menu is open.

                    Menu open: "block", Menu closed: "hidden"
                    *@
                    <svg x-bind:class="mobileMenuOpen ? 'block' : 'hidden'" class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" x-bind:aria-hidden="!mobileMenuOpen">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
                    </svg>
                </button>
            </div>

            @* 电脑的右侧的按钮 *@
            <div class="hidden lg:flex lg:items-center lg:justify-end xl:col-span-4">
                @* 提醒 *@
                <a href="#" class="ml-5 flex-shrink-0 rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
                    <span class="sr-only">View notifications</span>
                    <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0"/>
                    </svg>
                </a>

                @* 用户下拉栏 *@
                @(await Component.InvokeAsync<UserAccountDropDownViewComponent>("Type2"))
            </div>
        </div>
    </div>

    @* Mobile menu, show/hide based on menu state. *@
    <nav x-show="mobileMenuOpen" style="display: none;" class="lg:hidden" aria-label="Global">
        <div class="border-t border-gray-200 pt-4 pb-3">
            @(await Component.InvokeAsync<UserAccountDropDownViewComponent>("Type3"))
        </div>
    </nav>
</header>

<div x-data="modal">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8 mt-4">
        @if (levels.Links.ToList().Count > 0)
        {
            @(await Component.InvokeAsync<BreadcrumbsViewComponent>(levels))
        }
        @RenderBody()
    </div>

    <div x-show="showModal" style="display: none;" class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
        <!--
        Background backdrop, show/hide based on modal state.
    
        Entering: "ease-out duration-300"
        From: "opacity-0"
        To: "opacity-100"
        Leaving: "ease-in duration-200"
        From: "opacity-100"
        To: "opacity-0"
        -->
        <div
            x-show="showModal"
            x-transition:enter="ease-out duration-300"
            x-transition:enter-start="opacity-0"
            x-transition:enter-end="opacity-100"
            x-transition:leave="ease-in duration-200"
            x-transition:leave-start="opacity-100"
            x-transition:leave-end="opacity-0"
            class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity">
        </div>


        <div class="fixed inset-0 z-10 overflow-y-auto">
            <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                <!--
                Modal panel, show/hide based on modal state.
    
                Entering: "ease-out duration-300"
                From: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                To: "opacity-100 translate-y-0 sm:scale-100"
                Leaving: "ease-in duration-200"
                From: "opacity-100 translate-y-0 sm:scale-100"
                To: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                -->
                <div
                    x-show="showModal"
                    x-transition:enter="ease-out duration-300"
                    x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
                    x-transition:leave="ease-in duration-200"
                    x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
                    x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
                    x-bind:class=" modal?.cancelText != null ? 'sm:max-w-lg' : 'sm:max-w-sm' "
                    class="relative transform overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:p-6">
                    <div x-bind:class=" modal?.type === 'danger' ? 'sm:flex sm:items-start' : '' ">
                        <div x-show="modal?.type === 'succeed'" class="mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-green-100">
                            <svg class="h-6 w-6 text-green-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.5 12.75l6 6 9-13.5"/>
                            </svg>
                        </div>
                        <div x-show="modal?.type === 'danger'" class="mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10">
                            <svg class="h-6 w-6 text-red-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"/>
                            </svg>
                        </div>

                        <div x-bind:class="modal?.type === 'danger' ? 'sm:mt-0 sm:ml-4 sm:text-left' : 'sm:mt-5'" class="mt-3 text-center sm:mt-5">
                            <h3 class="text-lg font-medium leading-6 text-gray-900" id="modal-title" x-text="modal?.title">MODAL_TITLE</h3>
                            <div class="mt-2">
                                <p class="text-sm text-gray-500" x-text="modal?.message">MODAL_MESSAGE</p>
                            </div>
                        </div>
                    </div>


                    <div x-show="modal?.type == 'succeed' && modal?.cancelText == null" class="mt-5 sm:mt-6">
                        <button x-on:click="modal?.confirmAction()" type="button" class="inline-flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:text-sm">Go back to dashboard</button>
                    </div>

                    <div x-show="modal?.type == 'succeed' && modal?.cancelText != null" class="mt-5 sm:mt-6 sm:grid sm:grid-flow-row-dense sm:grid-cols-2 sm:gap-3">
                        <button x-on:click="modal?.confirmAction()" type="button" class="inline-flex w-full justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:col-start-2 sm:text-sm">Deactivate</button>
                        <button x-on:click="closeModal()" type="button" class="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:col-start-1 sm:mt-0 sm:text-sm">Cancel</button>
                    </div>

                    <div x-show="modal?.type == 'danger'" class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
                        <button x-on:click="modal?.confirmAction()" type="button" class="inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm">Deactivate</button>
                        <button x-on:click="closeModal()" type="button" class="mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script>
    document.addEventListener('alpine:init', () => {
        Alpine.data('menu', (initialParameter) => ({
            open: initialParameter.open ?? false,
            menuItemIdPrefix: initialParameter.menuItemIdPrefix ?? "menu-item",
            activeIndex: null,
            activeItem: null,
            onButtonClick() {
                this.open = !this.open;
            },
            onEscClick() {
                this.close();
            },
            onMouseMove(event, index) {
                if (this.activeIndex !== index) {
                    this.activeIndex = index
                    this.activeItem = event.target;
                }
            },
            onMouseLeave(event) {
                if (!event.toElement.id.includes(this.menuItemIdPrefix)) {
                    this.activeIndex = null;
                    this.activeItem = null;
                }
            },
            close() {
                this.open = false;
            }
        }))
        
        Alpine.data('modal', () => ({
            showModal: false,
            modal: null,
            addModal(type, title, message, cancelText, confirmText, confirmAction) {
              this.modal = {
                type: type,
                title: title, 
                message: message, 
                cancelText: cancelText,
                confirmText: confirmText,
                confirmAction: confirmAction
              }
            },
            closeModal() {
              this.showModal = false; 
            },
            doConfirm() {
              this.modal?.confirmAction()
            },
            popUpDanger(title, message, cancelText, confirmText, formSelector) {
              console.log(title, message, cancelText, confirmText, formSelector)
              this.addModal(
                'danger',
                title,
                message,
                cancelText,
                confirmText,
                () => {
                  const form = document.querySelector(formSelector);
                  form.submit();
                }
              )
              this.showModal = true;
            },
            popUpSucceed(title, message, cancelText, confirmText, formSelector) {
              this.addModal(
                'succeed',
                title,
                message,
                cancelText,
                confirmText,
                () => {
                  const form = document.querySelector(formSelector);
                  form.submit();
                }
              )
              this.showModal = true;
            },
            popUpSucceedNoCancel(title, message, confirmText, formSelector) {
              this.addModal(
                'succeed',
                title,
                message,
                null,
                confirmText,
                () => {
                  const form = document.querySelector(formSelector);
                  form.submit();
                }
              )
              this.showModal = true;
            },
          }))
    })
</script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>